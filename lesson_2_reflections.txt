What happens when you initialize a repository? Why do you need to do it?

    - Git add a .git directory to the folder, no commits exist in the history and have some untracked files in the repository.
    - For git could to track commits history and commit my changes to the git repository later.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

    - The files in staging area are there to be commited but not already in the repository.
    - It could select part of the changed files to be commited.

How can you use the staging area to make sure you have one commit per logical
change?

    - I can only add changes that want to commit to the staging area and the other changes are still in working directory and untracked.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

    - Develop some new features or experimental features.
    - Create new branch and that will not affect the real branch.

How do the diagrams help you visualize the branch structure?

    - Represent reachable and not reachable commits and different between branches.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

    - It takes other branch's changes to the current checkout branch and create a new commit describe the merge.
    - To show what happened and how git done to the merge.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
